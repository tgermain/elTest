# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  secret:
    docker:
      - image: circleci/python:3.6.4
    working_directory: ~/repo
    steps:
      - run:
          command: echo $verySecret
  black:
    docker:
      - image: circleci/python:3.6.4
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-packages-v1-{{ .Branch }}
            - pip-packages-v1-
      - run: pipenv sync --dev
      - save_cache:
          paths:
            - ~/.local/
          key: pip-package-v1-{{ .Branch }}
      - run:
          command: pipenv run black --check ./
  flake8:
    docker:
      - image: circleci/python:3.6.4
    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-packages-v1-{{ .Branch }}
            - pip-packages-v1-
      - run: pipenv sync --dev
      - save_cache:
          paths:
            - ~/.local/
          key: pip-package-v1-{{ .Branch }}
      - run:
          command: pipenv run flake8 ./
  pytest:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.4


    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - pip-packages-v1-{{ .Branch }}
            - pip-packages-v1-
      - run: pipenv sync
      - save_cache:
          paths:
            - ~/.local/
          key: pip-package-v1-{{ .Branch }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            mkdir test-reports
            pipenv run pytest --junitxml=test-reports/junit.xml

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports

workflows:
  version: 2
  everything:
    jobs:
      - pytest
      - black
      - flake8
      - hold:
          type: approval
          requires:
            - pytest
            - black
      - secret:
          requires:
            - hold